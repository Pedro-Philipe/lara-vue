version: '3.5'
services:
  database-service:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U votacultura -d votacultura || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    image: postgres:10
    container_name: votacultura-database
    environment:
      - POSTGRES_PASSWORD=senhavotacultura
      - POSTGRES_USER=votacultura
      - POSTGRES_DB=votacultura
      - POSTGRES_DB_TEST=votacultura-test
    ports:
      - "5433:5432"
    expose:
      - "5432"
    volumes:
      - ./database/docker-data/postgres:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/0.schema.sql
      - ./database/carga_ufs.sql:/docker-entrypoint-initdb.d/1.carga_ufs.sql
      - ./database/carga_municipios.sql:/docker-entrypoint-initdb.d/2.carga_municipios.sql
      - ./database/carga_criterios.sql:/docker-entrypoint-initdb.d/3.carga_criterios.sql
      - ./database/carga_segmentos.sql:/docker-entrypoint-initdb.d/4.carga_segmentos.sql
      - ./database/carga_cronograma.sql:/docker-entrypoint-initdb.d/5.carga_cronograma.sql
    networks:
      - votacultura_network
  webapp-service:
    #    build: ./webapp
    image: node:10
    container_name: votacultura-web
    user: "node"
    working_dir: /home/node/app
    #    healthcheck:
    #      test: ["CMD", "curl", "-sS", "http://localhost:8080"]
    #      #      test: ["CMD-SHELL", "node /home/node/app/healthcheck.js"]
    #      interval: 20s
    #      timeout: 5s
    #      retries: 3
    volumes:
      - ./webapp:/home/node/app
    command:
      sh -c 'npm i && npm run serve'
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
    networks:
      - votacultura_network

  api-service:
    container_name: votacultura-api
    build: ./api
    image: mds/votacultura-php-fpm:1.2.1
    working_dir: /application
    volumes:
      - ./api:/application
      #- ./api/docker/php-fpm/php-ini-overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini
    environment:
      - APP_ENV=local
    depends_on:
      - database-service
    links:
      - database-service
      # CONTAINER:ALIAS
    restart: on-failure
    networks:
      - votacultura_network

  webserver-service:
    build:
      context: ./api
      dockerfile: WebserverDockerfile
      args:
        EXPOSE_PORT: 80
    image: mds/votacultura-webserver-nginx:1.0.0
    container_name: votacultura-webserver
    working_dir: /application
    volumes:
      - ./api:/application
      - ./api/docker/webserver/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "88:80"
    depends_on:
      - api-service
    networks:
      - votacultura_network

  webapp-webserver-service:
    image: nginx:1.17-alpine
    container_name: votacultura-webapp-webserver
    working_dir: /usr/share/nginx/html
    volumes:
      - ./webapp/dist:/usr/share/nginx/html
    ports:
      - "80:80"
    depends_on:
      - api-service
    networks:
      - votacultura_network

# docker network create votacultura_network

networks:
  votacultura_network:
    name: votacultura_network
    driver: bridge
